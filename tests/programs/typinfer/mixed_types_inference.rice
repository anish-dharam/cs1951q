fn process_mixed(data: _) -> _ {
    let result = 0 in
    let i = 0 in
    while i < 3 {
        if data[i].0 > 0 {
            result := result + data[i].1
        } else {
            result := result - data[i].1
        };
        i := i + 1
    };
    result
}

fn create_pair(x: _, y: _) -> _ {
    (x, y)
}

fn main() {
    let pairs: [(int, int)] = [(1, 10), (-2, 20), (3, 30)] in
    let sum = process_mixed(pairs) in
    let new_pair = create_pair(42, 100) in
    println(int_to_string(sum));
    println(int_to_string(new_pair.0));
    println(int_to_string(new_pair.1))
}
